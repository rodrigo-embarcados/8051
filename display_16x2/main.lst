                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _lcd_puts
                                     13 	.globl _lcd_gotoxy
                                     14 	.globl _lcd_init
                                     15 	.globl _lcd_data
                                     16 	.globl _lcd_cmd
                                     17 	.globl _lcd_pulse
                                     18 	.globl _delay
                                     19 	.globl _EN
                                     20 	.globl _RW
                                     21 	.globl _RS
                                     22 	.globl _TF2
                                     23 	.globl _EXF2
                                     24 	.globl _RCLK
                                     25 	.globl _TCLK
                                     26 	.globl _EXEN2
                                     27 	.globl _TR2
                                     28 	.globl _C_T2
                                     29 	.globl _CP_RL2
                                     30 	.globl _T2CON_7
                                     31 	.globl _T2CON_6
                                     32 	.globl _T2CON_5
                                     33 	.globl _T2CON_4
                                     34 	.globl _T2CON_3
                                     35 	.globl _T2CON_2
                                     36 	.globl _T2CON_1
                                     37 	.globl _T2CON_0
                                     38 	.globl _PT2
                                     39 	.globl _ET2
                                     40 	.globl _CY
                                     41 	.globl _AC
                                     42 	.globl _F0
                                     43 	.globl _RS1
                                     44 	.globl _RS0
                                     45 	.globl _OV
                                     46 	.globl _F1
                                     47 	.globl _P
                                     48 	.globl _PS
                                     49 	.globl _PT1
                                     50 	.globl _PX1
                                     51 	.globl _PT0
                                     52 	.globl _PX0
                                     53 	.globl _RD
                                     54 	.globl _WR
                                     55 	.globl _T1
                                     56 	.globl _T0
                                     57 	.globl _INT1
                                     58 	.globl _INT0
                                     59 	.globl _TXD
                                     60 	.globl _RXD
                                     61 	.globl _P3_7
                                     62 	.globl _P3_6
                                     63 	.globl _P3_5
                                     64 	.globl _P3_4
                                     65 	.globl _P3_3
                                     66 	.globl _P3_2
                                     67 	.globl _P3_1
                                     68 	.globl _P3_0
                                     69 	.globl _EA
                                     70 	.globl _ES
                                     71 	.globl _ET1
                                     72 	.globl _EX1
                                     73 	.globl _ET0
                                     74 	.globl _EX0
                                     75 	.globl _P2_7
                                     76 	.globl _P2_6
                                     77 	.globl _P2_5
                                     78 	.globl _P2_4
                                     79 	.globl _P2_3
                                     80 	.globl _P2_2
                                     81 	.globl _P2_1
                                     82 	.globl _P2_0
                                     83 	.globl _SM0
                                     84 	.globl _SM1
                                     85 	.globl _SM2
                                     86 	.globl _REN
                                     87 	.globl _TB8
                                     88 	.globl _RB8
                                     89 	.globl _TI
                                     90 	.globl _RI
                                     91 	.globl _P1_7
                                     92 	.globl _P1_6
                                     93 	.globl _P1_5
                                     94 	.globl _P1_4
                                     95 	.globl _P1_3
                                     96 	.globl _P1_2
                                     97 	.globl _P1_1
                                     98 	.globl _P1_0
                                     99 	.globl _TF1
                                    100 	.globl _TR1
                                    101 	.globl _TF0
                                    102 	.globl _TR0
                                    103 	.globl _IE1
                                    104 	.globl _IT1
                                    105 	.globl _IE0
                                    106 	.globl _IT0
                                    107 	.globl _P0_7
                                    108 	.globl _P0_6
                                    109 	.globl _P0_5
                                    110 	.globl _P0_4
                                    111 	.globl _P0_3
                                    112 	.globl _P0_2
                                    113 	.globl _P0_1
                                    114 	.globl _P0_0
                                    115 	.globl _TH2
                                    116 	.globl _TL2
                                    117 	.globl _RCAP2H
                                    118 	.globl _RCAP2L
                                    119 	.globl _T2CON
                                    120 	.globl _B
                                    121 	.globl _ACC
                                    122 	.globl _PSW
                                    123 	.globl _IP
                                    124 	.globl _P3
                                    125 	.globl _IE
                                    126 	.globl _P2
                                    127 	.globl _SBUF
                                    128 	.globl _SCON
                                    129 	.globl _P1
                                    130 	.globl _TH1
                                    131 	.globl _TH0
                                    132 	.globl _TL1
                                    133 	.globl _TL0
                                    134 	.globl _TMOD
                                    135 	.globl _TCON
                                    136 	.globl _PCON
                                    137 	.globl _DPH
                                    138 	.globl _DPL
                                    139 	.globl _SP
                                    140 	.globl _P0
                                    141 	.globl _lcd_gotoxy_PARM_2
                                    142 ;--------------------------------------------------------
                                    143 ; special function registers
                                    144 ;--------------------------------------------------------
                                    145 	.area RSEG    (ABS,DATA)
      000000                        146 	.org 0x0000
                           000080   147 _P0	=	0x0080
                           000081   148 _SP	=	0x0081
                           000082   149 _DPL	=	0x0082
                           000083   150 _DPH	=	0x0083
                           000087   151 _PCON	=	0x0087
                           000088   152 _TCON	=	0x0088
                           000089   153 _TMOD	=	0x0089
                           00008A   154 _TL0	=	0x008a
                           00008B   155 _TL1	=	0x008b
                           00008C   156 _TH0	=	0x008c
                           00008D   157 _TH1	=	0x008d
                           000090   158 _P1	=	0x0090
                           000098   159 _SCON	=	0x0098
                           000099   160 _SBUF	=	0x0099
                           0000A0   161 _P2	=	0x00a0
                           0000A8   162 _IE	=	0x00a8
                           0000B0   163 _P3	=	0x00b0
                           0000B8   164 _IP	=	0x00b8
                           0000D0   165 _PSW	=	0x00d0
                           0000E0   166 _ACC	=	0x00e0
                           0000F0   167 _B	=	0x00f0
                           0000C8   168 _T2CON	=	0x00c8
                           0000CA   169 _RCAP2L	=	0x00ca
                           0000CB   170 _RCAP2H	=	0x00cb
                           0000CC   171 _TL2	=	0x00cc
                           0000CD   172 _TH2	=	0x00cd
                                    173 ;--------------------------------------------------------
                                    174 ; special function bits
                                    175 ;--------------------------------------------------------
                                    176 	.area RSEG    (ABS,DATA)
      000000                        177 	.org 0x0000
                           000080   178 _P0_0	=	0x0080
                           000081   179 _P0_1	=	0x0081
                           000082   180 _P0_2	=	0x0082
                           000083   181 _P0_3	=	0x0083
                           000084   182 _P0_4	=	0x0084
                           000085   183 _P0_5	=	0x0085
                           000086   184 _P0_6	=	0x0086
                           000087   185 _P0_7	=	0x0087
                           000088   186 _IT0	=	0x0088
                           000089   187 _IE0	=	0x0089
                           00008A   188 _IT1	=	0x008a
                           00008B   189 _IE1	=	0x008b
                           00008C   190 _TR0	=	0x008c
                           00008D   191 _TF0	=	0x008d
                           00008E   192 _TR1	=	0x008e
                           00008F   193 _TF1	=	0x008f
                           000090   194 _P1_0	=	0x0090
                           000091   195 _P1_1	=	0x0091
                           000092   196 _P1_2	=	0x0092
                           000093   197 _P1_3	=	0x0093
                           000094   198 _P1_4	=	0x0094
                           000095   199 _P1_5	=	0x0095
                           000096   200 _P1_6	=	0x0096
                           000097   201 _P1_7	=	0x0097
                           000098   202 _RI	=	0x0098
                           000099   203 _TI	=	0x0099
                           00009A   204 _RB8	=	0x009a
                           00009B   205 _TB8	=	0x009b
                           00009C   206 _REN	=	0x009c
                           00009D   207 _SM2	=	0x009d
                           00009E   208 _SM1	=	0x009e
                           00009F   209 _SM0	=	0x009f
                           0000A0   210 _P2_0	=	0x00a0
                           0000A1   211 _P2_1	=	0x00a1
                           0000A2   212 _P2_2	=	0x00a2
                           0000A3   213 _P2_3	=	0x00a3
                           0000A4   214 _P2_4	=	0x00a4
                           0000A5   215 _P2_5	=	0x00a5
                           0000A6   216 _P2_6	=	0x00a6
                           0000A7   217 _P2_7	=	0x00a7
                           0000A8   218 _EX0	=	0x00a8
                           0000A9   219 _ET0	=	0x00a9
                           0000AA   220 _EX1	=	0x00aa
                           0000AB   221 _ET1	=	0x00ab
                           0000AC   222 _ES	=	0x00ac
                           0000AF   223 _EA	=	0x00af
                           0000B0   224 _P3_0	=	0x00b0
                           0000B1   225 _P3_1	=	0x00b1
                           0000B2   226 _P3_2	=	0x00b2
                           0000B3   227 _P3_3	=	0x00b3
                           0000B4   228 _P3_4	=	0x00b4
                           0000B5   229 _P3_5	=	0x00b5
                           0000B6   230 _P3_6	=	0x00b6
                           0000B7   231 _P3_7	=	0x00b7
                           0000B0   232 _RXD	=	0x00b0
                           0000B1   233 _TXD	=	0x00b1
                           0000B2   234 _INT0	=	0x00b2
                           0000B3   235 _INT1	=	0x00b3
                           0000B4   236 _T0	=	0x00b4
                           0000B5   237 _T1	=	0x00b5
                           0000B6   238 _WR	=	0x00b6
                           0000B7   239 _RD	=	0x00b7
                           0000B8   240 _PX0	=	0x00b8
                           0000B9   241 _PT0	=	0x00b9
                           0000BA   242 _PX1	=	0x00ba
                           0000BB   243 _PT1	=	0x00bb
                           0000BC   244 _PS	=	0x00bc
                           0000D0   245 _P	=	0x00d0
                           0000D1   246 _F1	=	0x00d1
                           0000D2   247 _OV	=	0x00d2
                           0000D3   248 _RS0	=	0x00d3
                           0000D4   249 _RS1	=	0x00d4
                           0000D5   250 _F0	=	0x00d5
                           0000D6   251 _AC	=	0x00d6
                           0000D7   252 _CY	=	0x00d7
                           0000AD   253 _ET2	=	0x00ad
                           0000BD   254 _PT2	=	0x00bd
                           0000C8   255 _T2CON_0	=	0x00c8
                           0000C9   256 _T2CON_1	=	0x00c9
                           0000CA   257 _T2CON_2	=	0x00ca
                           0000CB   258 _T2CON_3	=	0x00cb
                           0000CC   259 _T2CON_4	=	0x00cc
                           0000CD   260 _T2CON_5	=	0x00cd
                           0000CE   261 _T2CON_6	=	0x00ce
                           0000CF   262 _T2CON_7	=	0x00cf
                           0000C8   263 _CP_RL2	=	0x00c8
                           0000C9   264 _C_T2	=	0x00c9
                           0000CA   265 _TR2	=	0x00ca
                           0000CB   266 _EXEN2	=	0x00cb
                           0000CC   267 _TCLK	=	0x00cc
                           0000CD   268 _RCLK	=	0x00cd
                           0000CE   269 _EXF2	=	0x00ce
                           0000CF   270 _TF2	=	0x00cf
                           0000B5   271 _RS	=	0x00b5
                           0000B6   272 _RW	=	0x00b6
                           0000B4   273 _EN	=	0x00b4
                                    274 ;--------------------------------------------------------
                                    275 ; overlayable register banks
                                    276 ;--------------------------------------------------------
                                    277 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        278 	.ds 8
                                    279 ;--------------------------------------------------------
                                    280 ; internal ram data
                                    281 ;--------------------------------------------------------
                                    282 	.area DSEG    (DATA)
      000000                        283 _lcd_gotoxy_PARM_2:
      000000                        284 	.ds 1
                                    285 ;--------------------------------------------------------
                                    286 ; overlayable items in internal ram
                                    287 ;--------------------------------------------------------
                                    288 	.area	OSEG    (OVR,DATA)
                                    289 ;--------------------------------------------------------
                                    290 ; Stack segment in internal ram
                                    291 ;--------------------------------------------------------
                                    292 	.area	SSEG
      000000                        293 __start__stack:
      000000                        294 	.ds	1
                                    295 
                                    296 ;--------------------------------------------------------
                                    297 ; indirectly addressable internal ram data
                                    298 ;--------------------------------------------------------
                                    299 	.area ISEG    (DATA)
                                    300 ;--------------------------------------------------------
                                    301 ; absolute internal ram data
                                    302 ;--------------------------------------------------------
                                    303 	.area IABS    (ABS,DATA)
                                    304 	.area IABS    (ABS,DATA)
                                    305 ;--------------------------------------------------------
                                    306 ; bit data
                                    307 ;--------------------------------------------------------
                                    308 	.area BSEG    (BIT)
                                    309 ;--------------------------------------------------------
                                    310 ; paged external ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area PSEG    (PAG,XDATA)
                                    313 ;--------------------------------------------------------
                                    314 ; external ram data
                                    315 ;--------------------------------------------------------
                                    316 	.area XSEG    (XDATA)
                                    317 ;--------------------------------------------------------
                                    318 ; absolute external ram data
                                    319 ;--------------------------------------------------------
                                    320 	.area XABS    (ABS,XDATA)
                                    321 ;--------------------------------------------------------
                                    322 ; external initialized ram data
                                    323 ;--------------------------------------------------------
                                    324 	.area XISEG   (XDATA)
                                    325 	.area HOME    (CODE)
                                    326 	.area GSINIT0 (CODE)
                                    327 	.area GSINIT1 (CODE)
                                    328 	.area GSINIT2 (CODE)
                                    329 	.area GSINIT3 (CODE)
                                    330 	.area GSINIT4 (CODE)
                                    331 	.area GSINIT5 (CODE)
                                    332 	.area GSINIT  (CODE)
                                    333 	.area GSFINAL (CODE)
                                    334 	.area CSEG    (CODE)
                                    335 ;--------------------------------------------------------
                                    336 ; interrupt vector
                                    337 ;--------------------------------------------------------
                                    338 	.area HOME    (CODE)
      000000                        339 __interrupt_vect:
      000000 02r00r00         [24]  340 	ljmp	__sdcc_gsinit_startup
                                    341 ;--------------------------------------------------------
                                    342 ; global & static initialisations
                                    343 ;--------------------------------------------------------
                                    344 	.area HOME    (CODE)
                                    345 	.area GSINIT  (CODE)
                                    346 	.area GSFINAL (CODE)
                                    347 	.area GSINIT  (CODE)
                                    348 	.globl __sdcc_gsinit_startup
                                    349 	.globl __sdcc_program_startup
                                    350 	.globl __start__stack
                                    351 	.globl __mcs51_genXINIT
                                    352 	.globl __mcs51_genXRAMCLEAR
                                    353 	.globl __mcs51_genRAMCLEAR
                                    354 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  355 	ljmp	__sdcc_program_startup
                                    356 ;--------------------------------------------------------
                                    357 ; Home
                                    358 ;--------------------------------------------------------
                                    359 	.area HOME    (CODE)
                                    360 	.area HOME    (CODE)
      000003                        361 __sdcc_program_startup:
      000003 02r00rBB         [24]  362 	ljmp	_main
                                    363 ;	return from main will return to caller
                                    364 ;--------------------------------------------------------
                                    365 ; code
                                    366 ;--------------------------------------------------------
                                    367 	.area CSEG    (CODE)
                                    368 ;------------------------------------------------------------
                                    369 ;Allocation info for local variables in function 'delay'
                                    370 ;------------------------------------------------------------
                                    371 ;ms                        Allocated to registers r6 r7 
                                    372 ;i                         Allocated to registers r4 r5 
                                    373 ;j                         Allocated to registers r2 r3 
                                    374 ;------------------------------------------------------------
                                    375 ;	main.c:9: void delay(unsigned int ms) 
                                    376 ;	-----------------------------------------
                                    377 ;	 function delay
                                    378 ;	-----------------------------------------
      000000                        379 _delay:
                           000007   380 	ar7 = 0x07
                           000006   381 	ar6 = 0x06
                           000005   382 	ar5 = 0x05
                           000004   383 	ar4 = 0x04
                           000003   384 	ar3 = 0x03
                           000002   385 	ar2 = 0x02
                           000001   386 	ar1 = 0x01
                           000000   387 	ar0 = 0x00
      000000 AE 82            [24]  388 	mov	r6,dpl
      000002 AF 83            [24]  389 	mov	r7,dph
                                    390 ;	main.c:12: for (i = 0; i < ms; i++)
      000004 7C 00            [12]  391 	mov	r4,#0x00
      000006 7D 00            [12]  392 	mov	r5,#0x00
      000008                        393 00107$:
      000008 C3               [12]  394 	clr	c
      000009 EC               [12]  395 	mov	a,r4
      00000A 9E               [12]  396 	subb	a,r6
      00000B ED               [12]  397 	mov	a,r5
      00000C 9F               [12]  398 	subb	a,r7
      00000D 50 14            [24]  399 	jnc	00109$
                                    400 ;	main.c:13: for (j = 0; j < 200; j++);
      00000F 7A C8            [12]  401 	mov	r2,#0xc8
      000011 7B 00            [12]  402 	mov	r3,#0x00
      000013                        403 00105$:
      000013 1A               [12]  404 	dec	r2
      000014 BA FF 01         [24]  405 	cjne	r2,#0xff,00130$
      000017 1B               [12]  406 	dec	r3
      000018                        407 00130$:
      000018 EA               [12]  408 	mov	a,r2
      000019 4B               [12]  409 	orl	a,r3
      00001A 70 F7            [24]  410 	jnz	00105$
                                    411 ;	main.c:12: for (i = 0; i < ms; i++)
      00001C 0C               [12]  412 	inc	r4
      00001D BC 00 E8         [24]  413 	cjne	r4,#0x00,00107$
      000020 0D               [12]  414 	inc	r5
      000021 80 E5            [24]  415 	sjmp	00107$
      000023                        416 00109$:
                                    417 ;	main.c:14: }
      000023 22               [24]  418 	ret
                                    419 ;------------------------------------------------------------
                                    420 ;Allocation info for local variables in function 'lcd_pulse'
                                    421 ;------------------------------------------------------------
                                    422 ;	main.c:16: void lcd_pulse(void) 
                                    423 ;	-----------------------------------------
                                    424 ;	 function lcd_pulse
                                    425 ;	-----------------------------------------
      000024                        426 _lcd_pulse:
                                    427 ;	main.c:18: EN = 1;
                                    428 ;	assignBit
      000024 D2 B4            [12]  429 	setb	_EN
                                    430 ;	main.c:19: delay(1);
      000026 90 00 01         [24]  431 	mov	dptr,#0x0001
      000029 12r00r00         [24]  432 	lcall	_delay
                                    433 ;	main.c:20: EN = 0;
                                    434 ;	assignBit
      00002C C2 B4            [12]  435 	clr	_EN
                                    436 ;	main.c:21: delay(1);
      00002E 90 00 01         [24]  437 	mov	dptr,#0x0001
                                    438 ;	main.c:22: }
      000031 02r00r00         [24]  439 	ljmp	_delay
                                    440 ;------------------------------------------------------------
                                    441 ;Allocation info for local variables in function 'lcd_cmd'
                                    442 ;------------------------------------------------------------
                                    443 ;cmd                       Allocated to registers r7 
                                    444 ;------------------------------------------------------------
                                    445 ;	main.c:24: void lcd_cmd(unsigned char cmd) 
                                    446 ;	-----------------------------------------
                                    447 ;	 function lcd_cmd
                                    448 ;	-----------------------------------------
      000034                        449 _lcd_cmd:
      000034 AF 82            [24]  450 	mov	r7,dpl
                                    451 ;	main.c:26: RS = 0;
                                    452 ;	assignBit
      000036 C2 B5            [12]  453 	clr	_RS
                                    454 ;	main.c:27: RW = 0;
                                    455 ;	assignBit
      000038 C2 B6            [12]  456 	clr	_RW
                                    457 ;	main.c:28: LCD = cmd;
      00003A 8F 80            [24]  458 	mov	_P0,r7
                                    459 ;	main.c:29: lcd_pulse();
      00003C 12r00r24         [24]  460 	lcall	_lcd_pulse
                                    461 ;	main.c:30: delay(2);
      00003F 90 00 02         [24]  462 	mov	dptr,#0x0002
                                    463 ;	main.c:31: }
      000042 02r00r00         [24]  464 	ljmp	_delay
                                    465 ;------------------------------------------------------------
                                    466 ;Allocation info for local variables in function 'lcd_data'
                                    467 ;------------------------------------------------------------
                                    468 ;data                      Allocated to registers r7 
                                    469 ;------------------------------------------------------------
                                    470 ;	main.c:33: void lcd_data(unsigned char data) 
                                    471 ;	-----------------------------------------
                                    472 ;	 function lcd_data
                                    473 ;	-----------------------------------------
      000045                        474 _lcd_data:
      000045 AF 82            [24]  475 	mov	r7,dpl
                                    476 ;	main.c:35: RS = 1;
                                    477 ;	assignBit
      000047 D2 B5            [12]  478 	setb	_RS
                                    479 ;	main.c:36: RW = 0;
                                    480 ;	assignBit
      000049 C2 B6            [12]  481 	clr	_RW
                                    482 ;	main.c:37: LCD = data;
      00004B 8F 80            [24]  483 	mov	_P0,r7
                                    484 ;	main.c:38: lcd_pulse();
      00004D 12r00r24         [24]  485 	lcall	_lcd_pulse
                                    486 ;	main.c:39: delay(2);
      000050 90 00 02         [24]  487 	mov	dptr,#0x0002
                                    488 ;	main.c:40: }
      000053 02r00r00         [24]  489 	ljmp	_delay
                                    490 ;------------------------------------------------------------
                                    491 ;Allocation info for local variables in function 'lcd_init'
                                    492 ;------------------------------------------------------------
                                    493 ;	main.c:42: void lcd_init(void) 
                                    494 ;	-----------------------------------------
                                    495 ;	 function lcd_init
                                    496 ;	-----------------------------------------
      000056                        497 _lcd_init:
                                    498 ;	main.c:44: delay(40);  // Aguarda após energização
      000056 90 00 28         [24]  499 	mov	dptr,#0x0028
      000059 12r00r00         [24]  500 	lcall	_delay
                                    501 ;	main.c:46: lcd_cmd(0x38); // Modo 8 bits, 2 linhas, 5x8
      00005C 75 82 38         [24]  502 	mov	dpl,#0x38
      00005F 12r00r34         [24]  503 	lcall	_lcd_cmd
                                    504 ;	main.c:47: lcd_cmd(0x0C); // Display ON, cursor OFF
      000062 75 82 0C         [24]  505 	mov	dpl,#0x0c
      000065 12r00r34         [24]  506 	lcall	_lcd_cmd
                                    507 ;	main.c:48: lcd_cmd(0x06); // Cursor avança
      000068 75 82 06         [24]  508 	mov	dpl,#0x06
      00006B 12r00r34         [24]  509 	lcall	_lcd_cmd
                                    510 ;	main.c:49: lcd_cmd(0x01); // Limpa tela
      00006E 75 82 01         [24]  511 	mov	dpl,#0x01
      000071 12r00r34         [24]  512 	lcall	_lcd_cmd
                                    513 ;	main.c:50: delay(2);
      000074 90 00 02         [24]  514 	mov	dptr,#0x0002
                                    515 ;	main.c:51: }
      000077 02r00r00         [24]  516 	ljmp	_delay
                                    517 ;------------------------------------------------------------
                                    518 ;Allocation info for local variables in function 'lcd_gotoxy'
                                    519 ;------------------------------------------------------------
                                    520 ;row                       Allocated with name '_lcd_gotoxy_PARM_2'
                                    521 ;col                       Allocated to registers r7 
                                    522 ;------------------------------------------------------------
                                    523 ;	main.c:53: void lcd_gotoxy(unsigned char col, unsigned char row) 
                                    524 ;	-----------------------------------------
                                    525 ;	 function lcd_gotoxy
                                    526 ;	-----------------------------------------
      00007A                        527 _lcd_gotoxy:
      00007A AF 82            [24]  528 	mov	r7,dpl
                                    529 ;	main.c:55: lcd_cmd((row == 0 ? 0x80 : 0xC0) + col);
      00007C E5*00            [12]  530 	mov	a,_lcd_gotoxy_PARM_2
      00007E 70 05            [24]  531 	jnz	00103$
      000080 7D 80            [12]  532 	mov	r5,#0x80
      000082 FE               [12]  533 	mov	r6,a
      000083 80 04            [24]  534 	sjmp	00104$
      000085                        535 00103$:
      000085 7D C0            [12]  536 	mov	r5,#0xc0
      000087 7E 00            [12]  537 	mov	r6,#0x00
      000089                        538 00104$:
      000089 EF               [12]  539 	mov	a,r7
      00008A 2D               [12]  540 	add	a,r5
      00008B F5 82            [12]  541 	mov	dpl,a
                                    542 ;	main.c:56: }
      00008D 02r00r34         [24]  543 	ljmp	_lcd_cmd
                                    544 ;------------------------------------------------------------
                                    545 ;Allocation info for local variables in function 'lcd_puts'
                                    546 ;------------------------------------------------------------
                                    547 ;str                       Allocated to registers 
                                    548 ;------------------------------------------------------------
                                    549 ;	main.c:58: void lcd_puts(const char *str) 
                                    550 ;	-----------------------------------------
                                    551 ;	 function lcd_puts
                                    552 ;	-----------------------------------------
      000090                        553 _lcd_puts:
      000090 AD 82            [24]  554 	mov	r5,dpl
      000092 AE 83            [24]  555 	mov	r6,dph
      000094 AF F0            [24]  556 	mov	r7,b
                                    557 ;	main.c:60: while (*str)
      000096                        558 00101$:
      000096 8D 82            [24]  559 	mov	dpl,r5
      000098 8E 83            [24]  560 	mov	dph,r6
      00009A 8F F0            [24]  561 	mov	b,r7
      00009C 12r00r00         [24]  562 	lcall	__gptrget
      00009F FC               [12]  563 	mov	r4,a
      0000A0 60 18            [24]  564 	jz	00104$
                                    565 ;	main.c:61: lcd_data(*str++);
      0000A2 8C 82            [24]  566 	mov	dpl,r4
      0000A4 0D               [12]  567 	inc	r5
      0000A5 BD 00 01         [24]  568 	cjne	r5,#0x00,00116$
      0000A8 0E               [12]  569 	inc	r6
      0000A9                        570 00116$:
      0000A9 C0 07            [24]  571 	push	ar7
      0000AB C0 06            [24]  572 	push	ar6
      0000AD C0 05            [24]  573 	push	ar5
      0000AF 12r00r45         [24]  574 	lcall	_lcd_data
      0000B2 D0 05            [24]  575 	pop	ar5
      0000B4 D0 06            [24]  576 	pop	ar6
      0000B6 D0 07            [24]  577 	pop	ar7
      0000B8 80 DC            [24]  578 	sjmp	00101$
      0000BA                        579 00104$:
                                    580 ;	main.c:62: }
      0000BA 22               [24]  581 	ret
                                    582 ;------------------------------------------------------------
                                    583 ;Allocation info for local variables in function 'main'
                                    584 ;------------------------------------------------------------
                                    585 ;	main.c:64: void main(void) 
                                    586 ;	-----------------------------------------
                                    587 ;	 function main
                                    588 ;	-----------------------------------------
      0000BB                        589 _main:
                                    590 ;	main.c:66: lcd_init();
      0000BB 12r00r56         [24]  591 	lcall	_lcd_init
                                    592 ;	main.c:68: lcd_gotoxy(0, 0);
      0000BE 75*00 00         [24]  593 	mov	_lcd_gotoxy_PARM_2,#0x00
      0000C1 75 82 00         [24]  594 	mov	dpl,#0x00
      0000C4 12r00r7A         [24]  595 	lcall	_lcd_gotoxy
                                    596 ;	main.c:69: lcd_puts("8051 FUNCIONA!");
      0000C7 90r00r00         [24]  597 	mov	dptr,#___str_0
      0000CA 75 F0 80         [24]  598 	mov	b,#0x80
      0000CD 12r00r90         [24]  599 	lcall	_lcd_puts
                                    600 ;	main.c:71: lcd_gotoxy(0, 1);
      0000D0 75*00 01         [24]  601 	mov	_lcd_gotoxy_PARM_2,#0x01
      0000D3 75 82 00         [24]  602 	mov	dpl,#0x00
      0000D6 12r00r7A         [24]  603 	lcall	_lcd_gotoxy
                                    604 ;	main.c:72: lcd_puts("LCD OK no P0 :)");
      0000D9 90r00r0F         [24]  605 	mov	dptr,#___str_1
      0000DC 75 F0 80         [24]  606 	mov	b,#0x80
      0000DF 12r00r90         [24]  607 	lcall	_lcd_puts
                                    608 ;	main.c:74: while (1);
      0000E2                        609 00102$:
                                    610 ;	main.c:75: }
      0000E2 80 FE            [24]  611 	sjmp	00102$
                                    612 	.area CSEG    (CODE)
                                    613 	.area CONST   (CODE)
                                    614 	.area CONST   (CODE)
      000000                        615 ___str_0:
      000000 38 30 35 31 20 46 55   616 	.ascii "8051 FUNCIONA!"
             4E 43 49 4F 4E 41 21
      00000E 00                     617 	.db 0x00
                                    618 	.area CSEG    (CODE)
                                    619 	.area CONST   (CODE)
      00000F                        620 ___str_1:
      00000F 4C 43 44 20 4F 4B 20   621 	.ascii "LCD OK no P0 :)"
             6E 6F 20 50 30 20 3A
             29
      00001E 00                     622 	.db 0x00
                                    623 	.area CSEG    (CODE)
                                    624 	.area XINIT   (CODE)
                                    625 	.area CABS    (ABS,CODE)
